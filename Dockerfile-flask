# Dockerfile-flask
FROM n0madic/alpine-gcc:8.2.0
# Install python3 and upgrade pip
RUN apk add --no-cache \
    file \
    imagemagick \
    imagemagick-dev \
    linux-headers \
    uwsgi-python3 \
    python3 \
    python3-dev && \
    python3 -m ensurepip && \
    rm -r /usr/lib/python*/ensurepip && \
    pip3 install --upgrade pip setuptools && \
    if [ ! -e /usr/bin/pip ]; then ln -s pip3 /usr/bin/pip ; fi && \
    if [[ ! -e /usr/bin/python ]]; then ln -sf /usr/bin/python3 /usr/bin/python; fi && \
    rm -r /root/.cache
# Install image preview generator tools
ENV MAGICK_HOME=/usr
# Set an environment variable with the directory
# where we'll be running the app
ENV APP /app
# Create the directory and instruct Docker to operate
# from there from now on
RUN mkdir $APP
WORKDIR $APP
RUN mkdir assets/images/submissions
RUN mkdir assets/images/submissions/accepted
RUN mkdir assets/images/submissions/rejected
RUN mkdir assets/images/submissions/pending
RUN mkdir assets/images/submissions/pending
RUN mkdir assets/images/submissions/composite/iterations

# Expose the port uWSGI will listen on
EXPOSE 5000
# Copy the requirements file in order to install
# Python dependencies
COPY requirements.txt .
# Install Python dependencies
RUN pip3 install -r requirements.txt
# We copy the rest of the codebase into the image
COPY . .
# Finally, we run uWSGI with the ini file we
# created earlier
CMD [ "uwsgi", "--ini", "app.ini" ]
